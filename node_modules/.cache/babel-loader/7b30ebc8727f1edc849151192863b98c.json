{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Darasimi files/News update app (React)/src/Components/RandomNewsFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./RandomNewsFeed.module.css\";\nimport NavBar from \"./NavBar\";\nimport RandomNewsFeedList from \"./RandomNewsFeedList\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction RandomNewsFeed(props) {\n  _s();\n\n  let [feed, setFeed] = useState([]);\n  let [error, setError] = useState(null);\n  let [loading, setLoading] = useState(false);\n\n  async function fetchedNewsHandler() {\n    setFeed([]);\n    setLoading(true);\n    setError(null);\n    set;\n    let endpoint = \"https://gnews.io/api/v4/top-headlines?token=6ad4161893ca83bd5bb69478a1ef9f0c&lang=en\";\n\n    try {\n      let response = await fetch(endpoint);\n\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong\");\n      }\n\n      let data = await response.json();\n      let loadedFeed = [];\n      let newsList = data.articles;\n\n      for (let newsLists of newsList) {\n        loadedFeed.push({\n          time: newsLists.publishedAt,\n          id: newsLists.publishedAt,\n          title: newsLists.title,\n          content: newsLists.content,\n          image: newsLists.image,\n          url: newsLists.url,\n          source: newsLists.source.name\n        });\n        setFeed(loadedFeed);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n  } //   useEffect(() =>{\n  //    fetchedNewsHandler()\n  //   }, [])\n\n\n  let fetchTest = () => {\n    fetchedNewsHandler();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.heading,\n        children: [\"World\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.span,\n          children: \"News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RandomNewsFeedList, {\n      feeds: feed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTest,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RandomNewsFeed, \"fq+vQ3CA1YdWcDF3ofmw4Htnj9s=\");\n\n_c = RandomNewsFeed;\nexport default RandomNewsFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomNewsFeed\");","map":{"version":3,"names":["React","useState","useEffect","styles","NavBar","RandomNewsFeedList","Loader","RandomNewsFeed","props","feed","setFeed","error","setError","loading","setLoading","fetchedNewsHandler","set","endpoint","response","fetch","ok","Error","data","json","loadedFeed","newsList","articles","newsLists","push","time","publishedAt","id","title","content","image","url","source","name","message","fetchTest","body","heading","span"],"sources":["/Users/mac/Desktop/Darasimi files/News update app (React)/src/Components/RandomNewsFeed.js"],"sourcesContent":["import React, {useState , useEffect} from \"react\";\nimport styles from \"./RandomNewsFeed.module.css\";\nimport NavBar from \"./NavBar\";\nimport RandomNewsFeedList from \"./RandomNewsFeedList\";\nimport Loader from \"./Loader\";\n\nfunction RandomNewsFeed(props) {\n  let [feed, setFeed] = useState([]);\n  let [error, setError] = useState(null);\n  let [loading , setLoading] = useState(false)\n\n  async function fetchedNewsHandler() {\n    setFeed([]);\n    setLoading(true)\n    setError(null)\n    set\n    let endpoint =\n      \"https://gnews.io/api/v4/top-headlines?token=6ad4161893ca83bd5bb69478a1ef9f0c&lang=en\";\n    try {\n      let response = await fetch(endpoint);\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong\");\n      }\n      let data = await response.json();\n      let loadedFeed = [];\n      let newsList = data.articles;\n      for (let newsLists of newsList) {\n        loadedFeed.push({\n          time: newsLists.publishedAt,\n          id: newsLists.publishedAt,\n          title: newsLists.title,\n          content: newsLists.content,\n          image: newsLists.image,\n          url: newsLists.url,\n          source: newsLists.source.name,\n        });\n        setFeed(loadedFeed);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false)\n  }\n\n//   useEffect(() =>{\n//    fetchedNewsHandler()\n//   }, [])\n\n  let fetchTest = () => {\n    fetchedNewsHandler();\n  };\n  return (\n    <>\n      <NavBar />\n      <div className={styles.body}>\n           <h1 className={styles.heading}>\n          World<span className={styles.span}>News</span>\n        </h1>\n      </div>\n       <RandomNewsFeedList feeds = {feed}/>\n      <button onClick={fetchTest}>Click me</button>\n    </>\n  );\n}\n\nexport default RandomNewsFeed;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAAA;;EAC7B,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAA9B;EACA,IAAI,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAhC;EACA,IAAI,CAACY,OAAD,EAAWC,UAAX,IAAyBb,QAAQ,CAAC,KAAD,CAArC;;EAEA,eAAec,kBAAf,GAAoC;IAClCL,OAAO,CAAC,EAAD,CAAP;IACAI,UAAU,CAAC,IAAD,CAAV;IACAF,QAAQ,CAAC,IAAD,CAAR;IACAI,GAAG;IACH,IAAIC,QAAQ,GACV,sFADF;;IAEA,IAAI;MACF,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA1B;;MACA,IAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACD,IAAIC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;MACA,IAAIC,UAAU,GAAG,EAAjB;MACA,IAAIC,QAAQ,GAAGH,IAAI,CAACI,QAApB;;MACA,KAAK,IAAIC,SAAT,IAAsBF,QAAtB,EAAgC;QAC9BD,UAAU,CAACI,IAAX,CAAgB;UACdC,IAAI,EAAEF,SAAS,CAACG,WADF;UAEdC,EAAE,EAAEJ,SAAS,CAACG,WAFA;UAGdE,KAAK,EAAEL,SAAS,CAACK,KAHH;UAIdC,OAAO,EAAEN,SAAS,CAACM,OAJL;UAKdC,KAAK,EAAEP,SAAS,CAACO,KALH;UAMdC,GAAG,EAAER,SAAS,CAACQ,GAND;UAOdC,MAAM,EAAET,SAAS,CAACS,MAAV,CAAiBC;QAPX,CAAhB;QASA3B,OAAO,CAACc,UAAD,CAAP;MACD;IACF,CApBD,CAoBE,OAAOb,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAAC2B,OAAP,CAAR;IACD;;IACDxB,UAAU,CAAC,KAAD,CAAV;EACD,CApC4B,CAsC/B;EACA;EACA;;;EAEE,IAAIyB,SAAS,GAAG,MAAM;IACpBxB,kBAAkB;EACnB,CAFD;;EAGA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAEZ,MAAM,CAACqC,IAAvB;MAAA,uBACK;QAAI,SAAS,EAAErC,MAAM,CAACsC,OAAtB;QAAA,iCACI;UAAM,SAAS,EAAEtC,MAAM,CAACuC,IAAxB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADL;MAAA;MAAA;MAAA;IAAA,QAFF,eAOG,QAAC,kBAAD;MAAoB,KAAK,EAAIjC;IAA7B;MAAA;MAAA;MAAA;IAAA,QAPH,eAQE;MAAQ,OAAO,EAAE8B,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA,gBADF;AAYD;;GAzDQhC,c;;KAAAA,c;AA2DT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}